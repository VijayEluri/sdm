// The contents of this file are subject to the Mozilla Public
// License Version 1.1 (the "License"); you may not use this file
// except in compliance with the License. You may obtain a copy of
// the License at http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS
// IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
// implied. See the License for the specific language governing
// rights and limitations under the License.
// 
// Contributor(s): Contributors are attributed in the source code
// where applicable.
// 
// The Original Code is "Stamdata".
// 
// The Initial Developer of the Original Code is Trifork Public A/S.
// 
// Portions created for the Original Code are Copyright 2011,
// LÃ¦gemiddelstyrelsen. All Rights Reserved.
// 
// Portions created for the FMKi Project are Copyright 2011,
// National Board of e-Health (NSI). All Rights Reserved.

//////////////////////////////////////////////////////////////////////////////
// This file is the base build-script for the project. There are additional
// config files in the 'config'-directory, that handle different aspects of
// the build and deployment for the project.
//////////////////////////////////////////////////////////////////////////////

apply plugin: 'java-base'

// Please make sure you read the README.md file before you try to understand
// what is going on.

allprojects {
	// You can use 'gradle eclipse' to generate eclipse project files.
	// You can use 'gradle -t' to see a list of availible tasks.
	apply plugin: 'eclipse'
	apply plugin: 'idea'

	defaultTasks 'build'

	// Usually you will want to add proxy repositories to nexus instead on
	// adding explicitly here.
	repositories {
		mavenLocal()
		mavenRepo name: 'new-trifork-releases', urls: 'https://nexus.trifork.com/content/groups/public/'
		// These two repos are only kept during transition to the new repo.
		mavenRepo name: 'trifork-releases', urls: 'http://nexus.ci81.trifork.com/content/groups/public/'
		mavenRepo name: 'trifork-snapshots', urls: 'http://nexus.ci81.trifork.com/content/groups/public-snapshots/'
	}
}

subprojects { subproject ->
	
	// Subproject currently always default to java. This might change in the future.
	// If you are making WARs take a look at the 'war' plugin.
	apply plugin: 'java'
	apply plugin: 'deployment'
	
	targetCompatibility = 1.6
	sourceCompatibility = 1.6

	// Handle java files as UTF-8.
	// Each Compile task has a CompileOptions associated with it which
	// includes  an 'encoding' property.

	[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

	// Include references to common dependencies so you can keep
	// versions consistent accross your sub-projects.
	apply from: "${rootDir}/config/libraries.groovy"

	// Checkstyle source coding standards.

	apply plugin: 'code-quality'
	checkstyleConfigDir = "$rootDir/config"
	checkstyleConfigFileName = new File(checkstyleConfigDir, "checkstyle.xml")
	checkstyleProperties.checkstyleConfigDir = checkstyleConfigDir
	
	[checkstyleMain, checkstyleTest]*.ignoreFailures = true

	// Add some extra memory for testing, this is usually useful.
	// Also enable code assertions while testing.

	test {
		jvmArgs '-ea', '-Xmx768m'
	}
	
	// Test coverage.
	apply from: "${rootDir}/config/coverage.groovy"
}

dependsOnChildren()

// The following is section is adds the plugins from
// https://github.com/trifork/gradle-plugins.

buildscript {
	repositories {
		mavenLocal()
		mavenRepo name: 'new-trifork-releases', urls: 'https://nexus.trifork.com/content/groups/public/'
		mavenRepo name: 'trifork-releases', urls: 'http://nexus.ci81.trifork.com/content/groups/public/'
		mavenRepo name: 'trifork-snapshots', urls: 'http://nexus.ci81.trifork.com/content/groups/public-snapshots/'
	}

    dependencies {
		classpath 'com.trifork:gradle-plugins:0.1.0'
	}

}

// Gradle is a new tool, and as such you can't expect people
// outside your circle of influence to have it installed.
// This task is executed (by the build master) to produce
// an embedded version of gradle to check-in to our SCM.

task wrapper(type: Wrapper) {
    gradleVersion = '1.0-milestone-3'
}
