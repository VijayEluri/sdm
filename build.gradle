//////////////////////////////////////////////////////////////////////////////
// This file is the base build-script for the project. There are additional
// config files in the 'config'-directory, that handle different aspects of
// the build and deployment for the project.
//////////////////////////////////////////////////////////////////////////////

apply plugin: 'java-base'

// Check that the required properties have been set.
assert hasProperty('projectName')
assert hasProperty('nextReleaseVersion')

allprojects {
	// You can use 'gradle eclipse' to generate eclipse project files.
	// You can use 'gradle -t' to see a list of availible tasks.
	apply plugin: 'eclipse'

	defaultTasks 'build'

	group = 'com.trifork.' + projectName

	// Usually you will want to add proxy repositories to nexus instead on
	// adding explicitly here.
	repositories {
		mavenRepo name: 'trifork-nexus',
			urls: 'http://nexus.ci81.trifork.com/content/groups/public/'
		mavenRepo name: 'trifork-snapshots',
			urls: 'http://nexus.ci81.trifork.com/content/groups/public-snapshots/'
		mavenLocal()
    }
}

apply from: 'config/dependencies.groovy'

subprojects { subproject ->
	// Subproject currently always default to java. This might change in the future.
	// If you are making WARs take a look at the 'war' plugin.
	apply plugin: 'java'

	targetCompatibility = '1.6'
	sourceCompatibility = '1.6'

	// Settings for deploying the produced artifacts to nexus etc.
	apply from: "$rootDir/config/deployment.groovy"

	// Checkstyle source coding standards.
	// TODO: These setting are a bit verbose, but
	// the implementation seems to be a bit broken (in Gradle 0.9.2).
	apply plugin: 'code-quality'
	checkstyleConfigDir = "$rootDir/config/checkstyle"
	checkstyleConfigFileName = new File(checkstyleConfigDir, "checkstyle.xml")
	checkstyleProperties.checkstyleConfigDir = checkstyleConfigDir

	// Shared dependencies for all subprojects.
	// Logging is a common shared dependency.
	dependencies {
		testCompile	libraries.testng
	}

	// Add some extra memory for testing, this is usually useful.
	test {
		maxHeapSize = "1024m"
	}
}

dependsOnChildren()
